{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "receiveEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "1": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Address.sol",
    "3": "contracts/FlashLoanReceiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/FlashLoanReceiver.sol",
    "exportedSymbols": {
      "Address": [
        541
      ],
      "FlashLoanReceiver": [
        164
      ]
    },
    "id": 165,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 97,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "absolutePath": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Address.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Address.sol",
        "id": 98,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 165,
        "sourceUnit": 542,
        "src": "58:79:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FlashLoanReceiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 99,
          "nodeType": "StructuredDocumentation",
          "src": "139:100:3",
          "text": " @title FlashLoanReceiver\n @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)"
        },
        "fullyImplemented": true,
        "id": 164,
        "linearizedBaseContracts": [
          164
        ],
        "name": "FlashLoanReceiver",
        "nameLocation": "249:17:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 102,
            "libraryName": {
              "id": 100,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 541,
              "src": "279:7:3"
            },
            "nodeType": "UsingForDirective",
            "src": "273:34:3",
            "typeName": {
              "id": 101,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "291:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "constant": false,
            "id": 104,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "337:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 164,
            "src": "313:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 103,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "313:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "389:35:3",
              "statements": [
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "399:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110,
                      "name": "poolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "406:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "399:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "399:18:3"
                }
              ]
            },
            "id": 114,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "376:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "360:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "359:29:3"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "389:0:3"
            },
            "scope": 164,
            "src": "348:76:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "533:341:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "551:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "551:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 122,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "565:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "551:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206d75737420626520706f6f6c",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "571:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee1d184cfe91189aee4630b0f63c035ed74d2951e0f9b3ca16f4acb125fce52d",
                          "typeString": "literal_string \"Sender must be pool\""
                        },
                        "value": "Sender must be pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee1d184cfe91189aee4630b0f63c035ed74d2951e0f9b3ca16f4acb125fce52d",
                          "typeString": "literal_string \"Sender must be pool\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "543:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "543:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "543:50:3"
                },
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "amountToBeRepaid",
                      "nameLocation": "612:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "604:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "604:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 133,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 129,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "631:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "631:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 131,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "643:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "631:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "604:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 137,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "673:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FlashLoanReceiver_$164",
                                  "typeString": "contract FlashLoanReceiver"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FlashLoanReceiver_$164",
                                  "typeString": "contract FlashLoanReceiver"
                                }
                              ],
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "665:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 135,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "665:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "665:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "665:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 140,
                          "name": "amountToBeRepaid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "690:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "665:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420626f72726f772074686174206d756368",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "708:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_efb1b1bba0a5d43d87166d1a2bdef69c0a7510260d2771ed3adea2face6e91bb",
                          "typeString": "literal_string \"Cannot borrow that much\""
                        },
                        "value": "Cannot borrow that much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_efb1b1bba0a5d43d87166d1a2bdef69c0a7510260d2771ed3adea2face6e91bb",
                          "typeString": "literal_string \"Cannot borrow that much\""
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "657:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:77:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "657:77:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 145,
                      "name": "_executeActionDuringFlashLoan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "753:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "753:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "753:31:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 151,
                        "name": "amountToBeRepaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "850:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 148,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "835:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 298,
                      "src": "835:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "835:32:3"
                }
              ]
            },
            "functionSelector": "1efa4ec0",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveEther",
            "nameLocation": "492:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "513:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "505:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "504:13:3"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:0:3"
            },
            "scope": 164,
            "src": "483:391:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "989:3:3",
              "statements": []
            },
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeActionDuringFlashLoan",
            "nameLocation": "948:29:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:2:3"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "989:0:3"
            },
            "scope": 164,
            "src": "939:53:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1055:2:3",
              "statements": []
            },
            "id": 163,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1035:2:3"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1055:0:3"
            },
            "scope": 164,
            "src": "1027:30:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 165,
        "src": "240:819:3",
        "usedErrors": []
      }
    ],
    "src": "33:1026:3"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161033638038061033683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6102a3806100936000396000f3fe6080604052600436106100225760003560e01c80631efa4ec01461002e57600080fd5b3661002957005b600080fd5b61004161003c36600461022e565b610043565b005b6000546001600160a01b031633146100985760405162461bcd60e51b815260206004820152601360248201527214d95b99195c881b5d5cdd081899481c1bdbdb606a1b60448201526064015b60405180910390fd5b60006100a48234610247565b9050804710156100f65760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420626f72726f772074686174206d756368000000000000000000604482015260640161008f565b60005461010c906001600160a01b031682610110565b5050565b804710156101605760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161008f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146101ad576040519150601f19603f3d011682016040523d82523d6000602084013e6101b2565b606091505b50509050806102295760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161008f565b505050565b60006020828403121561024057600080fd5b5035919050565b6000821982111561026857634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212201aa4171a1bdf687d896bc5f31defb827563e2bb9058f1339c413aa75d7b1942064736f6c634300080c0033",
  "bytecodeSha1": "dd7477c6b11add5479760f638030b48b7d282b49",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "FlashLoanReceiver",
  "coverageMap": {
    "branches": {
      "1": {
        "Address.sendValue": {
          "7": [
            2501,
            2532,
            true
          ],
          "8": [
            2647,
            2654,
            true
          ]
        }
      },
      "3": {
        "FlashLoanReceiver.receiveEther": {
          "5": [
            551,
            569,
            true
          ],
          "6": [
            665,
            706,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "Address.sendValue": {
          "3": [
            2493,
            2566
          ],
          "4": [
            2639,
            2717
          ]
        }
      },
      "3": {
        "FlashLoanReceiver.receiveEther": {
          "0": [
            543,
            593
          ],
          "1": [
            657,
            734
          ],
          "2": [
            835,
            867
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Address"
  ],
  "deployedBytecode": "6080604052600436106100225760003560e01c80631efa4ec01461002e57600080fd5b3661002957005b600080fd5b61004161003c36600461022e565b610043565b005b6000546001600160a01b031633146100985760405162461bcd60e51b815260206004820152601360248201527214d95b99195c881b5d5cdd081899481c1bdbdb606a1b60448201526064015b60405180910390fd5b60006100a48234610247565b9050804710156100f65760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420626f72726f772074686174206d756368000000000000000000604482015260640161008f565b60005461010c906001600160a01b031682610110565b5050565b804710156101605760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161008f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146101ad576040519150601f19603f3d011682016040523d82523d6000602084013e6101b2565b606091505b50509050806102295760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161008f565b505050565b60006020828403121561024057600080fd5b5035919050565b6000821982111561026857634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212201aa4171a1bdf687d896bc5f31defb827563e2bb9058f1339c413aa75d7b1942064736f6c634300080c0033",
  "deployedSourceMap": "240:819:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;483:391;;;;;;:::i;:::-;;:::i;:::-;;;565:4;;-1:-1:-1;;;;;565:4:3;551:10;:18;543:50;;;;-1:-1:-1;;;543:50:3;;401:2:5;543:50:3;;;383:21:5;440:2;420:18;;;413:30;-1:-1:-1;;;459:18:5;;;452:49;518:18;;543:50:3;;;;;;;;;604:24;631:15;643:3;631:9;:15;:::i;:::-;604:42;;690:16;665:21;:41;;657:77;;;;-1:-1:-1;;;657:77:3;;979:2:5;657:77:3;;;961:21:5;1018:2;998:18;;;991:30;1057:25;1037:18;;;1030:53;1100:18;;657:77:3;777:347:5;657:77:3;835:4;;:32;;-1:-1:-1;;;;;835:4:3;850:16;835:14;:32::i;:::-;533:341;483:391;:::o;2412:312:1:-;2526:6;2501:21;:31;;2493:73;;;;-1:-1:-1;;;2493:73:1;;1331:2:5;2493:73:1;;;1313:21:5;1370:2;1350:18;;;1343:30;1409:31;1389:18;;;1382:59;1458:18;;2493:73:1;1129:353:5;2493:73:1;2578:12;2596:9;-1:-1:-1;;;;;2596:14:1;2618:6;2596:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:52;;;2647:7;2639:78;;;;-1:-1:-1;;;2639:78:1;;1899:2:5;2639:78:1;;;1881:21:5;1938:2;1918:18;;;1911:30;1977:34;1957:18;;;1950:62;2048:28;2028:18;;;2021:56;2094:19;;2639:78:1;1697:422:5;2639:78:1;2483:241;2412:312;;:::o;14:180:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:5;;14:180;-1:-1:-1;14:180:5:o;547:225::-;587:3;618:1;614:6;611:1;608:13;605:136;;;663:10;658:3;654:20;651:1;644:31;698:4;695:1;688:15;726:4;723:1;716:15;605:136;-1:-1:-1;757:9:5;;547:225::o",
  "language": "Solidity",
  "natspec": {
    "author": "Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)",
    "kind": "dev",
    "methods": {},
    "title": "FlashLoanReceiver",
    "version": 1
  },
  "offset": [
    240,
    1059
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1EFA4EC0 EQ PUSH2 0x2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x29 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41 PUSH2 0x3C CALLDATASIZE PUSH1 0x4 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x43 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14D95B99195C881B5D5CDD081899481C1BDBDB PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA4 DUP3 CALLVALUE PUSH2 0x247 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0xF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420626F72726F772074686174206D756368000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x10C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x110 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x268 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG4 OR BYTE SHL 0xDF PUSH9 0x7D896BC5F31DEFB827 JUMP RETURNDATACOPY 0x2B 0xB9 SDIV DUP16 SGT CODECOPY 0xC4 SGT 0xAA PUSH22 0xD7B1942064736F6C634300080C003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        240,
        1059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22"
    },
    "12": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1EFA4EC0"
    },
    "25": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "EQ",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E"
    },
    "29": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "32": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "REVERT",
      "path": "3"
    },
    "34": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "35": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "36": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29"
    },
    "39": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "40": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "STOP",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "44": {
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "DUP1",
      "path": "3"
    },
    "45": {
      "first_revert": true,
      "fn": null,
      "offset": [
        240,
        1059
      ],
      "op": "REVERT",
      "path": "3"
    },
    "46": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "47": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x41"
    },
    "50": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C"
    },
    "53": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "54": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "56": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22E"
    },
    "59": {
      "fn": "FlashLoanReceiver.receiveEther",
      "jump": "i",
      "offset": [
        483,
        874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "60": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "61": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43"
    },
    "64": {
      "fn": "FlashLoanReceiver.receiveEther",
      "jump": "i",
      "offset": [
        483,
        874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "65": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "66": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "STOP",
      "path": "3"
    },
    "67": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "68": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        565,
        569
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x0"
    },
    "70": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        565,
        569
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "71": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "73": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "75": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "77": {
      "op": "SHL"
    },
    "78": {
      "op": "SUB"
    },
    "79": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        565,
        569
      ],
      "op": "AND",
      "path": "3"
    },
    "80": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        551,
        561
      ],
      "op": "CALLER",
      "path": "3"
    },
    "81": {
      "branch": 5,
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        551,
        569
      ],
      "op": "EQ",
      "path": "3"
    },
    "82": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x98"
    },
    "85": {
      "branch": 5,
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "86": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "88": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "89": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "93": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "95": {
      "op": "SHL"
    },
    "96": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "DUP2",
      "path": "3"
    },
    "97": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "98": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "100": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "102": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "DUP3",
      "path": "3"
    },
    "103": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "ADD",
      "path": "3"
    },
    "104": {
      "op": "MSTORE"
    },
    "105": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "109": {
      "op": "DUP3"
    },
    "110": {
      "op": "ADD"
    },
    "111": {
      "op": "MSTORE"
    },
    "112": {
      "op": "PUSH19",
      "value": "0x14D95B99195C881B5D5CDD081899481C1BDBDB"
    },
    "132": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "134": {
      "op": "SHL"
    },
    "135": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "137": {
      "op": "DUP3"
    },
    "138": {
      "op": "ADD"
    },
    "139": {
      "op": "MSTORE"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "142": {
      "op": "ADD"
    },
    "143": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "144": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "146": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "147": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "149": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "SUB",
      "path": "3"
    },
    "150": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "151": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "152": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        543,
        593
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "153": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        604,
        628
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "155": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        631,
        646
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA4"
    },
    "158": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        643,
        646
      ],
      "op": "DUP3",
      "path": "3"
    },
    "159": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        631,
        640
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "160": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        631,
        646
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x247"
    },
    "163": {
      "fn": "FlashLoanReceiver.receiveEther",
      "jump": "i",
      "offset": [
        631,
        646
      ],
      "op": "JUMP",
      "path": "3"
    },
    "164": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        631,
        646
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "165": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        604,
        646
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "166": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        604,
        646
      ],
      "op": "POP",
      "path": "3"
    },
    "167": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        690,
        706
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 1
    },
    "168": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        665,
        686
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "169": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        665,
        706
      ],
      "op": "LT",
      "path": "3"
    },
    "170": {
      "branch": 6,
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        665,
        706
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "171": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        657,
        734
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF6"
    },
    "174": {
      "branch": 6,
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        657,
        734
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "175": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        657,
        734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "177": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        657,
        734
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "178": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "182": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "184": {
      "op": "SHL"
    },
    "185": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        657,
        734
      ],
      "op": "DUP2",
      "path": "3"
    },
    "186": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        657,
        734
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "189": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        657,
        734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "191": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        657,
        734
      ],
      "op": "DUP3",
      "path": "3"
    },
    "192": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        657,
        734
      ],
      "op": "ADD",
      "path": "3"
    },
    "193": {
      "op": "MSTORE"
    },
    "194": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "198": {
      "op": "DUP3"
    },
    "199": {
      "op": "ADD"
    },
    "200": {
      "op": "MSTORE"
    },
    "201": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420626F72726F772074686174206D756368000000000000000000"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "236": {
      "op": "DUP3"
    },
    "237": {
      "op": "ADD"
    },
    "238": {
      "op": "MSTORE"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "241": {
      "op": "ADD"
    },
    "242": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        657,
        734
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8F"
    },
    "245": {
      "op": "JUMP"
    },
    "246": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        657,
        734
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "247": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        835,
        839
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x0"
    },
    "249": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        835,
        839
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "250": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        835,
        867
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10C"
    },
    "253": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        835,
        867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "260": {
      "op": "SHL"
    },
    "261": {
      "op": "SUB"
    },
    "262": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        835,
        839
      ],
      "op": "AND",
      "path": "3"
    },
    "263": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        850,
        866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "264": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        835,
        849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x110"
    },
    "267": {
      "fn": "FlashLoanReceiver.receiveEther",
      "jump": "i",
      "offset": [
        835,
        867
      ],
      "op": "JUMP",
      "path": "3"
    },
    "268": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        835,
        867
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "269": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        533,
        874
      ],
      "op": "POP",
      "path": "3"
    },
    "270": {
      "fn": "FlashLoanReceiver.receiveEther",
      "offset": [
        483,
        874
      ],
      "op": "POP",
      "path": "3"
    },
    "271": {
      "fn": "FlashLoanReceiver.receiveEther",
      "jump": "o",
      "offset": [
        483,
        874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "272": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "273": {
      "fn": "Address.sendValue",
      "offset": [
        2526,
        2532
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 3
    },
    "274": {
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2522
      ],
      "op": "SELFBALANCE",
      "path": "1"
    },
    "275": {
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2532
      ],
      "op": "LT",
      "path": "1"
    },
    "276": {
      "branch": 7,
      "fn": "Address.sendValue",
      "offset": [
        2501,
        2532
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "277": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x160"
    },
    "280": {
      "branch": 7,
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "281": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "283": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "284": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "288": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "290": {
      "op": "SHL"
    },
    "291": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "292": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "295": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "297": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "298": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "ADD",
      "path": "1"
    },
    "299": {
      "op": "MSTORE"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "304": {
      "op": "DUP3"
    },
    "305": {
      "op": "ADD"
    },
    "306": {
      "op": "MSTORE"
    },
    "307": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "342": {
      "op": "DUP3"
    },
    "343": {
      "op": "ADD"
    },
    "344": {
      "op": "MSTORE"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "347": {
      "op": "ADD"
    },
    "348": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F"
    },
    "351": {
      "op": "JUMP"
    },
    "352": {
      "fn": "Address.sendValue",
      "offset": [
        2493,
        2566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "353": {
      "fn": "Address.sendValue",
      "offset": [
        2578,
        2590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "355": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2605
      ],
      "op": "DUP3",
      "path": "1"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "362": {
      "op": "SHL"
    },
    "363": {
      "op": "SUB"
    },
    "364": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2610
      ],
      "op": "AND",
      "path": "1"
    },
    "365": {
      "fn": "Address.sendValue",
      "offset": [
        2618,
        2624
      ],
      "op": "DUP3",
      "path": "1"
    },
    "366": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "368": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "369": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "371": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "373": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "374": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "375": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP4",
      "path": "1"
    },
    "376": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SUB",
      "path": "1"
    },
    "377": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "378": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP6",
      "path": "1"
    },
    "379": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP8",
      "path": "1"
    },
    "380": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "GAS",
      "path": "1"
    },
    "381": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "CALL",
      "path": "1"
    },
    "382": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "383": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "1"
    },
    "384": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "1"
    },
    "385": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "1"
    },
    "386": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "387": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "388": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "390": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "391": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "EQ",
      "path": "1"
    },
    "392": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AD"
    },
    "395": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "396": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "398": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "399": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "400": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "1"
    },
    "401": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "403": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "NOT",
      "path": "1"
    },
    "404": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "406": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "407": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "1"
    },
    "408": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "AND",
      "path": "1"
    },
    "409": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP3",
      "path": "1"
    },
    "410": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "1"
    },
    "411": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "413": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "414": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "415": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP3",
      "path": "1"
    },
    "416": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "417": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "418": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "420": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "422": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "DUP5",
      "path": "1"
    },
    "423": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "ADD",
      "path": "1"
    },
    "424": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "425": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B2"
    },
    "428": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMP",
      "path": "1"
    },
    "429": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "430": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "432": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "433": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "1"
    },
    "434": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "435": {
      "fn": "Address.sendValue",
      "offset": [
        2596,
        2629
      ],
      "op": "POP",
      "path": "1"
    },
    "436": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "POP",
      "path": "1"
    },
    "437": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "438": {
      "fn": "Address.sendValue",
      "offset": [
        2577,
        2629
      ],
      "op": "POP",
      "path": "1"
    },
    "439": {
      "branch": 8,
      "fn": "Address.sendValue",
      "offset": [
        2647,
        2654
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 4
    },
    "440": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x229"
    },
    "443": {
      "branch": 8,
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "444": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "446": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "447": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "451": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "453": {
      "op": "SHL"
    },
    "454": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "DUP2",
      "path": "1"
    },
    "455": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "458": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "460": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "DUP3",
      "path": "1"
    },
    "461": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "ADD",
      "path": "1"
    },
    "462": {
      "op": "MSTORE"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "467": {
      "op": "DUP3"
    },
    "468": {
      "op": "ADD"
    },
    "469": {
      "op": "MSTORE"
    },
    "470": {
      "op": "PUSH32",
      "value": "0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "505": {
      "op": "DUP3"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "op": "MSTORE"
    },
    "508": {
      "op": "PUSH32",
      "value": "0x6563697069656E74206D61792068617665207265766572746564000000000000"
    },
    "541": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "543": {
      "op": "DUP3"
    },
    "544": {
      "op": "ADD"
    },
    "545": {
      "op": "MSTORE"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "548": {
      "op": "ADD"
    },
    "549": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F"
    },
    "552": {
      "op": "JUMP"
    },
    "553": {
      "fn": "Address.sendValue",
      "offset": [
        2639,
        2717
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "554": {
      "fn": "Address.sendValue",
      "offset": [
        2483,
        2724
      ],
      "op": "POP",
      "path": "1"
    },
    "555": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "POP",
      "path": "1"
    },
    "556": {
      "fn": "Address.sendValue",
      "offset": [
        2412,
        2724
      ],
      "op": "POP",
      "path": "1"
    },
    "557": {
      "fn": "Address.sendValue",
      "jump": "o",
      "offset": [
        2412,
        2724
      ],
      "op": "JUMP",
      "path": "1"
    },
    "558": {
      "op": "JUMPDEST"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "563": {
      "op": "DUP3"
    },
    "564": {
      "op": "DUP5"
    },
    "565": {
      "op": "SUB"
    },
    "566": {
      "op": "SLT"
    },
    "567": {
      "op": "ISZERO"
    },
    "568": {
      "op": "PUSH2",
      "value": "0x240"
    },
    "571": {
      "op": "JUMPI"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "574": {
      "op": "DUP1"
    },
    "575": {
      "op": "REVERT"
    },
    "576": {
      "op": "JUMPDEST"
    },
    "577": {
      "op": "POP"
    },
    "578": {
      "op": "CALLDATALOAD"
    },
    "579": {
      "op": "SWAP2"
    },
    "580": {
      "op": "SWAP1"
    },
    "581": {
      "op": "POP"
    },
    "582": {
      "jump": "o",
      "op": "JUMP"
    },
    "583": {
      "op": "JUMPDEST"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "586": {
      "op": "DUP3"
    },
    "587": {
      "op": "NOT"
    },
    "588": {
      "op": "DUP3"
    },
    "589": {
      "op": "GT"
    },
    "590": {
      "op": "ISZERO"
    },
    "591": {
      "op": "PUSH2",
      "value": "0x268"
    },
    "594": {
      "op": "JUMPI"
    },
    "595": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "600": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "602": {
      "op": "SHL"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "605": {
      "op": "MSTORE"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "610": {
      "op": "MSTORE"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "615": {
      "op": "REVERT"
    },
    "616": {
      "op": "JUMPDEST"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "op": "ADD"
    },
    "619": {
      "op": "SWAP1"
    },
    "620": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "b3977e3277f2da7f33117ae7eabf417f6b3669a3",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Address.sol\";\n\n/**\n * @title FlashLoanReceiver\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */\ncontract FlashLoanReceiver {\n    using Address for address payable;\n\n    address payable private pool;\n\n    constructor(address payable poolAddress) {\n        pool = poolAddress;\n    }\n\n    // Function called by the pool during flash loan\n    function receiveEther(uint256 fee) public payable {\n        require(msg.sender == pool, \"Sender must be pool\");\n\n        uint256 amountToBeRepaid = msg.value + fee;\n\n        require(address(this).balance >= amountToBeRepaid, \"Cannot borrow that much\");\n        \n        _executeActionDuringFlashLoan();\n        \n        // Return funds to pool\n        pool.sendValue(amountToBeRepaid);\n    }\n\n    // Internal function where the funds received are used\n    function _executeActionDuringFlashLoan() internal { }\n\n    // Allow deposits of ETH\n    receive () external payable {}\n}",
  "sourceMap": "240:819:3:-:0;;;348:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;399:4;:18;;-1:-1:-1;;;;;;399:18:3;-1:-1:-1;;;;;399:18:3;;;;;;;;;;240:819;;14:298:5;92:6;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;187:16;;-1:-1:-1;;;;;232:31:5;;222:42;;212:70;;278:1;275;268:12;212:70;301:5;14:298;-1:-1:-1;;;14:298:5:o;:::-;240:819:3;;;;;;",
  "sourcePath": "contracts/FlashLoanReceiver.sol",
  "type": "contract"
}